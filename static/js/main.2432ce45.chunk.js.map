{"version":3,"sources":["containers/Cities/types.js","containers/Cities/actions.js","components/City/index.js","containers/Cities/index.js","components/Search/index.js","containers/Header/index.js","containers/Cities/reducer.js","reducer/index.js","containers/Cities/saga/workers/fetchCity/index.js","containers/Cities/saga/workers/searchCity/index.js","containers/Cities/saga/index.js","sagas/index.js","store/index.js","containers/App/index.js","serviceWorker.js","index.js"],"names":["Object","freeze","FETCH_CITY","FETCH_CITY_SUCCESS","FETCH_CITY_FAIL","SEARCH_CITY","SEARCH_CITY_SUCCESS","SEARCH_CITY_FAIL","FETCH_CITY_START","FETCH_CITY_STOP","DELETE_SEARCH_ENTITIES","DELETE_CITY","fetchCity","id","type","types","payload","fetchCitySuccess","city","fetchCityFail","error","searchCity","searchCitySuccess","searchCityFail","fetchCityStart","fetchCityStop","deleteSearchEntities","deleteCity","City","_onDelete","_this$props","_this","props","onDelete","_this$props2","this","name","country","icon","description","wind","temperature","react_default","a","createElement","className","onClick","src","concat","alt","Component","Cities","actions","_this2","cityEntities","cities","map","sys","main","_city$weather$","weather","speed","temp","components_City","key","connect","_ref","dispatch","bindActionCreators","objectSpread","citiesActions","Search","state","value","_debounce","delay","timer","fn","clearTimeout","setTimeout","debounce","_handleChange","event","onSearch","target","setState","_handleSearch","_handleKeyPress","_handleSelectCity","onSelect","_getSearchItems","entities","input","focus","isLoading","placeholder","ref","onKeyPress","onChange","react_fontawesome_index_es","_onSearch","length","Header","_this$props$actions","console","log","_this$props$cities","searchEntities","components_Search","initialState","arguments","undefined","action","toConsumableArray","filter","rootReducer","combineReducers","fetchCityWorker","response","regenerator_default","wrap","_context","prev","next","put","call","fetch","method","sent","json","status","Error","t0","message","finish","stop","_marked","searchCityWorker","result","list","searchCity_marked","fetchCityWatcher","mark","takeEvery","saga","all","sagas_marked","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeEnhancers","compose","sagaMiddleware","createLogger","duration","collapsed","diff","colors","title","prevState","nextState","createSagaMiddleware","middleware","store","createStore","applyMiddleware","apply","run","library","add","faSearch","faSpinner","App","es","containers_Header","containers_Cities","Boolean","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2432ce45.chunk.js","sourcesContent":["export default Object.freeze({\r\n  FETCH_CITY:         'FETCH_CITY',\r\n  FETCH_CITY_SUCCESS: 'FETCH_CITY_SUCCESS',\r\n  FETCH_CITY_FAIL:    'FETCH_CITY_FAIL',\r\n\r\n  SEARCH_CITY:         'SEARCH_CITY',\r\n  SEARCH_CITY_SUCCESS: 'SEARCH_CITY_SUCCESS',\r\n  SEARCH_CITY_FAIL:    'SEARCH_CITY_FAIL',\r\n\r\n  FETCH_CITY_START: 'FETCH_CITY_START',\r\n  FETCH_CITY_STOP:  'FETCH_CITY_STOP',\r\n\r\n  DELETE_SEARCH_ENTITIES: 'DELETE_SEARCH_ENTITIES',\r\n\r\n  DELETE_CITY: 'DELETE_CITY',\r\n});\r\n","import types from './types';\r\n\r\nexport default Object.freeze({\r\n  fetchCity: (id) => ({\r\n    type:    types.FETCH_CITY,\r\n    payload: id,\r\n  }),\r\n  fetchCitySuccess: (city) => ({\r\n    type:    types.FETCH_CITY_SUCCESS,\r\n    payload: city,\r\n  }),\r\n  fetchCityFail: (error) => ({\r\n    type:    types.FETCH_CITY_FAIL,\r\n    payload: error,\r\n    error:   true,\r\n  }),\r\n\r\n  searchCity: (city) => ({\r\n    type:    types.SEARCH_CITY,\r\n    payload: city,\r\n  }),\r\n  searchCitySuccess: (city) => ({\r\n    type:    types.SEARCH_CITY_SUCCESS,\r\n    payload: city,\r\n  }),\r\n  searchCityFail: (error) => ({\r\n    type:    types.SEARCH_CITY_FAIL,\r\n    payload: error,\r\n    error:   true,\r\n  }),\r\n\r\n  fetchCityStart: () => ({\r\n    type: types.FETCH_CITY_START,\r\n  }),\r\n  fetchCityStop: () => ({\r\n    type: types.FETCH_CITY_STOP,\r\n  }),\r\n\r\n  deleteSearchEntities: () => ({\r\n    type: types.DELETE_SEARCH_ENTITIES,\r\n  }),\r\n  deleteCity: (id) => ({\r\n    type:    types.DELETE_CITY,\r\n    payload: id,\r\n  }),\r\n});\r\n","// Core\r\nimport React, { Component } from 'react';\r\nimport { string, number, func } from 'prop-types';\r\n\r\n// Styles\r\nimport './city.css';\r\n\r\nclass City extends Component {\r\n  _onDelete = () => {\r\n    const { onDelete, id } = this.props;\r\n\r\n    onDelete(id);\r\n  }\r\n\r\n  render () {\r\n    const { name, country, icon, description, wind, temperature } = this.props;\r\n\r\n    return (\r\n      <div className=\"city box effect2\">\r\n        <p className=\"close\" onClick = { this._onDelete }>x</p>\r\n        <h3>{ name }</h3>\r\n        <h4>{ country }</h4>\r\n        <img\r\n          className=\"weather-icon\" \r\n          src={ `https://openweathermap.org/img/w/${ icon }.png` }\r\n          alt={ `\"Weather ${ name }, ${ country }\"` }\r\n        />\r\n        <p className=\"temperature\">{ temperature } °C</p>\r\n        <p>{ wind } m/s</p>\r\n        <p>{ description }</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCity.propTypes = {\r\n  id: number,\r\n  name: string,\r\n  country: string,\r\n  icon: string,\r\n  description: string,\r\n  wind: number,\r\n  temperature: number,\r\n  onDelete: func\r\n};\r\n\r\nexport default City;\r\n","// Core\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport citiesActions from './actions';\r\n\r\n// Components\r\nimport City from '../../components/City';\r\n\r\nclass Cities extends Component {\r\n  componentDidMount() {\r\n    const { fetchCity } = this.props.actions;\r\n\r\n    fetchCity(2643743);\r\n  }\r\n\r\n  _onDelete = (id) => {\r\n    const { deleteCity } = this.props.actions;\r\n    \r\n    deleteCity(id);\r\n  }\r\n\r\n  render () {\r\n    const { cityEntities } = this.props.cities;\r\n\r\n    return (\r\n      <div className=\"cities-wrapper\">\r\n        {\r\n          cityEntities.map(city => {\r\n            const { id, name, sys, wind, main} = city;\r\n            const { icon, description } = city.weather[0];\r\n            const { speed } = wind;\r\n            const { temp } = main;\r\n\r\n            return (\r\n              <City\r\n                key = { id }\r\n                id = { id }\r\n                name = { name }\r\n                country = { sys.country }\r\n                icon = { icon }\r\n                description = { description }\r\n                wind = { speed }\r\n                temperature = { temp }\r\n                onDelete = { this._onDelete }\r\n              />\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ cities }) => ({\r\n  cities,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actions: bindActionCreators({ ...citiesActions }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities);\r\n","// Core\r\nimport React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n// Styles\r\nimport './search.css';\r\n\r\nfunction debounce(delay) {\r\n  let timer;\r\n\r\n  return function(fn) {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(fn, delay);\r\n  }\r\n}\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    value: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.input.focus();\r\n  }\r\n\r\n  _debounce = debounce(300)\r\n\r\n  _handleChange = (event) => {\r\n    const { onSearch } = this.props;\r\n    const value = event.target.value;\r\n\r\n    this._debounce(() => onSearch(value));\r\n    this.setState({ value });\r\n  }\r\n\r\n  _handleSearch = () => {\r\n    const { onSearch } = this.props;\r\n    const { value } = this.state;\r\n\r\n    onSearch(value);\r\n  }\r\n\r\n  _handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      this._handleSearch();\r\n    }\r\n  }\r\n\r\n  _handleSelectCity = (id) => {\r\n    const { onSelect } = this.props;\r\n\r\n    onSelect(id);\r\n    this.setState({ value: '' });\r\n  }\r\n\r\n  _getSearchItems = (entities) => (\r\n    <ul className=\"search-entities\">\r\n      {\r\n        entities.map((city) => {\r\n          const { id, name, sys, main } = city;\r\n          const { country } = sys;\r\n          let { temp } = main;\r\n          temp = temp < 0 ? temp : `+${ temp }`\r\n\r\n          return (\r\n            <li key = { id } onClick = { () => this._handleSelectCity(id) }>\r\n              { `${ name } (${ country }) °C ${ temp }` }\r\n            </li>\r\n          );\r\n        })\r\n      }\r\n    </ul>\r\n  )\r\n\r\n  render () {\r\n    const { value } = this.state;\r\n    const { entities, isLoading } = this.props;\r\n\r\n    return (\r\n      <div className=\"search-wrapper\">\r\n        <div className=\"input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-input\"\r\n            placeholder=\"Your city name\"\r\n            ref = { (input) => this.input = input }\r\n            onKeyPress = { this._handleKeyPress }\r\n            onChange = { this._handleChange }\r\n            value = { value }\r\n          />\r\n          <FontAwesomeIcon\r\n            icon={ isLoading ? 'spinner' : 'search' }\r\n            className=\"search-icon\"\r\n            onClick = { this._onSearch }\r\n          />\r\n        </div>\r\n        {\r\n          entities.length\r\n            ? this._getSearchItems(entities)\r\n            : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","// Core\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n// Actions\r\nimport citiesActions from '../Cities/actions';\r\n\r\n// Components\r\nimport Search from '../../components/Search';\r\n\r\nclass Header extends Component {\r\n  _handleSelectCity = (id) => {\r\n    const { deleteSearchEntities, fetchCity } = this.props.actions;\r\n\r\n    console.log('city id: ', id);\r\n    fetchCity(id);\r\n    deleteSearchEntities();\r\n  }\r\n\r\n  render() {\r\n    const { searchCity } = this.props.actions;\r\n    const { searchEntities, isLoading } = this.props.cities;\r\n\r\n    return (\r\n      <header className=\"App-header\">\r\n        <h2>Weather</h2>\r\n        <Search\r\n          entities = { searchEntities }\r\n          isLoading = { isLoading }\r\n          onSearch = { searchCity }\r\n          onSelect = { this._handleSelectCity }\r\n        />\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ cities }) => ({\r\n  cities,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actions: bindActionCreators({ ...citiesActions }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import types from './types';\r\n\r\nconst initialState = {\r\n    cityEntities: [],\r\n    searchEntities: [],\r\n    isLoading: false,\r\n};\r\n\r\nconst cities = (state = initialState, action) => {\r\n  const { payload } = action;\r\n\r\n  switch (action.type) {\r\n    case types.FETCH_CITY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        cityEntities: [\r\n          ...state.cityEntities.filter(city => city.id !== payload.id),\r\n          payload,\r\n        ],\r\n      };\r\n    case types.SEARCH_CITY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        searchEntities: payload,\r\n      };\r\n    case types.DELETE_SEARCH_ENTITIES:\r\n      return {\r\n        ...state,\r\n        searchEntities: [],\r\n      };\r\n    case types.FETCH_CITY_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case types.FETCH_CITY_STOP:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n\r\n    case types.DELETE_CITY:\r\n      return {\r\n        ...state,\r\n        cityEntities: state.cityEntities.filter(city => city.id !== payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cities;\r\n","// Core\r\nimport { combineReducers } from 'redux';\r\n\r\nimport cities from '../containers/Cities/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  cities,\r\n});\r\n\r\nexport default rootReducer;\r\n","// Core\r\nimport { put, call } from 'redux-saga/effects';\r\n\r\n// Instruments\r\nimport citiesActions from '../../../actions';\r\n\r\nexport function* fetchCityWorker ({ payload: id }) {\r\n    try {\r\n        yield put(citiesActions.fetchCityStart());\r\n\r\n        const response = yield call(\r\n            fetch,\r\n            `https://api.openweathermap.org/data/2.5/weather?units=metric&id=${ id }&appid=ecd63065bd25bdde07e45cd2f66852ce`,\r\n            { method:  'GET' }\r\n        );\r\n\r\n        const city = yield call([response, response.json]);\r\n\r\n        if (response.status !== 200) {\r\n            throw new Error('error fetch city');\r\n        }\r\n\r\n        yield put(citiesActions.fetchCitySuccess(city));\r\n    } catch (error) {\r\n        yield put(citiesActions.fetchCityFail(error.message));\r\n    } finally {\r\n        yield put(citiesActions.fetchCityStop());\r\n    }\r\n}\r\n","// Core\r\nimport { put, call } from 'redux-saga/effects';\r\n\r\n// Instruments\r\nimport citiesActions from '../../../actions';\r\n\r\nexport function* searchCityWorker ({ payload: city }) {\r\n    try {\r\n        yield put(citiesActions.fetchCityStart());\r\n\r\n        const response = yield call(\r\n            fetch,\r\n            `https://api.openweathermap.org/data/2.5/find?units=metric&q=${ city }&appid=ecd63065bd25bdde07e45cd2f66852ce`,\r\n            { method:  'GET' }\r\n        );\r\n\r\n        if (response.status !== 200) {\r\n            throw new Error('error search city');\r\n        }\r\n\r\n        const result = yield call([response, response.json]);\r\n        const { list: cities } = result\r\n\r\n        yield put(citiesActions.searchCitySuccess(cities));\r\n    } catch (error) {\r\n        yield put(citiesActions.searchCityFail(error.message));\r\n    } finally {\r\n        yield put(citiesActions.fetchCityStop());\r\n    }\r\n}\r\n","// Core\r\nimport { takeEvery } from 'redux-saga/effects';\r\n\r\n// Instruments\r\nimport types from '../types';\r\nimport { fetchCityWorker } from './workers/fetchCity';\r\nimport { searchCityWorker } from './workers/searchCity';\r\n\r\nexport default Object.freeze({\r\n    * fetchCityWatcher () {\r\n        yield takeEvery(types.FETCH_CITY, fetchCityWorker);\r\n        yield takeEvery(types.SEARCH_CITY, searchCityWorker);\r\n    },\r\n});\r\n","// Core\r\nimport { all } from 'redux-saga/effects';\r\n\r\n// Instruments\r\nimport cities from '../containers/Cities/saga';\r\n\r\nexport function* saga () {\r\n  yield all([\r\n    cities.fetchCityWatcher(),\r\n  ]);\r\n}\r\n","// Core\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from '../reducer/index';\r\nimport { saga } from '../sagas';\r\n\r\n// Environment check\r\nconst dev = process.env.NODE_ENV === 'development'; // eslint-disable-line\r\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\nconst composeEnhancers = dev && devtools ? devtools : compose;\r\n\r\nconst logger = createLogger({\r\n    duration:  true,\r\n    collapsed: true,\r\n    diff:      true,\r\n    colors:    {\r\n        title:     () => '#139BFE',\r\n        prevState: () => '#1C5FAF',\r\n        action:    () => '#149945',\r\n        nextState: () => '#A47104',\r\n        error:     () => '#ff0005',\r\n    },\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [\r\n    sagaMiddleware\r\n];\r\n\r\nif (dev) {\r\n    middleware.push(logger);\r\n}\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n\r\nsagaMiddleware.run(saga);\r\n","// Core\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faSearch, faSpinner } from '@fortawesome/free-solid-svg-icons';\n\n// Containers\nimport Cities from '../Cities';\n\n// Components\nimport Header from '../Header';\n\n// Store\nimport store from '../../store';\n\n// Styles\nimport './App.css';\n\nlibrary.add(faSearch);\nlibrary.add(faSpinner);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store = { store }>\n        <div className=\"App\">\n          <Header />\n          <div className=\"App-body\">\n            <Cities />\n          </div>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}